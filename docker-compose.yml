services:
  api-service:
    build:
      context: .
      dockerfile: src/docker/Dockerfile.api
    volumes:
      - ./files:/app/files
      - ./model/saved_models:/app/model/saved_models
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WORKER_REPLICAS=${WORKER_REPLICAS:-3}
    ports:
      - "5000:5000"
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '1'
        reservations:
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
  
  worker:
    build:
      context: .
      dockerfile: src/docker/Dockerfile.worker
    volumes:
      - ./files:/app/files
      - ./model/saved_models:/app/model/saved_models
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WORKER_ID={{.Task.Slot}}
    depends_on:
      - redis
    deploy:
      mode: replicated
      replicas: ${WORKER_REPLICAS:-3}
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '2'
        reservations:
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "python", "-c", "import os, sys; sys.exit(0 if os.path.exists('/app/worker_healthcheck.txt') else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
  
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
  
  test:
    build:
      context: .
      dockerfile: tests/docker/Dockerfile.tests
    volumes:
      - ./files:/app/files
      - ./tests:/app/tests
    environment:
      - PYTHONUNBUFFERED=1
      - API_URL=http://api-service:5000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - api-service
      - worker
      - redis
    profiles:
      - test
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data: